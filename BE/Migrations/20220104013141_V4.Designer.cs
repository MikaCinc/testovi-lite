// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace WebAPI.Migrations
{
    [DbContext(typeof(TestoviContext))]
    [Migration("20220104013141_V4")]
    partial class V4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Pitanje", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Highlighted")
                        .HasColumnType("bit");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("isArchived")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("Pitanje");
                });

            modelBuilder.Entity("Models.Spojnica", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Archived")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Highlighted")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfGames")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("ID");

                    b.ToTable("Spojnica");
                });

            modelBuilder.Entity("Models.SpojnicePitanja", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PitanjeID")
                        .HasColumnType("int");

                    b.Property<int?>("SpojnicaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PitanjeID");

                    b.HasIndex("SpojnicaID");

                    b.ToTable("SpojnicePitanja");
                });

            modelBuilder.Entity("Models.SpojniceTagovi", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("SpojnicaID")
                        .HasColumnType("int");

                    b.Property<int?>("TagID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SpojnicaID");

                    b.HasIndex("TagID");

                    b.ToTable("SpojniceTagovi");
                });

            modelBuilder.Entity("Models.Tag", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("Models.SpojnicePitanja", b =>
                {
                    b.HasOne("Models.Pitanje", "Pitanje")
                        .WithMany()
                        .HasForeignKey("PitanjeID");

                    b.HasOne("Models.Spojnica", "Spojnica")
                        .WithMany("SpojnicePitanja")
                        .HasForeignKey("SpojnicaID");

                    b.Navigation("Pitanje");

                    b.Navigation("Spojnica");
                });

            modelBuilder.Entity("Models.SpojniceTagovi", b =>
                {
                    b.HasOne("Models.Spojnica", "Spojnica")
                        .WithMany("SpojniceTagovi")
                        .HasForeignKey("SpojnicaID");

                    b.HasOne("Models.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagID");

                    b.Navigation("Spojnica");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Models.Spojnica", b =>
                {
                    b.Navigation("SpojnicePitanja");

                    b.Navigation("SpojniceTagovi");
                });
#pragma warning restore 612, 618
        }
    }
}
